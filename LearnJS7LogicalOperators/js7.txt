LOGICAL Operators
    Are used in combination with conditional statements to create
more complex conditions.
    It Allows programmers to put 2 or more condiitons in one expression,

Method                  Description

&&                      AND
||                      OR
!                       NOT


//AND OPERATOR
Both CONDITIONS should be true

let age = 18;
let experience = 3;
let language = "JavaScript";

console.log(age >= 18 && experience > 1 && language === "JavaScript");
//Output: true
//Explanation: All three conditions are true, so the result is true.

console.log(age >= 18 && experience > 3);
//Output: false
//Explanation: The first condition is true, but the second condition is false, so the result is false.


//With IF and ELSE STATEMENT
let age = 18;
let experience = 0;
let language = "JavaScript";

if (age >= 18 && experience > 1 && language === "JavaScript") {
  console.log("You are qualified for the Job.");
} else {
  console.log("You are not qualified for the Job.");
}

//Output: You are not qualified for the Job.
// Explanation: The first condition is true, bu


//OR Operator
//Either CONDITIONS SHOULD BE TRUE

let hasDegree = true;
let experience = 3;

console.log(hasDegree || experience > 2);
//Output: true
//Explanation: hasDegree is true, so the condition is true.

console.log(hasDegree || experience > 4);
//Output: true
//Explanation: hasDegree is true, so the condition is true.


//ANOTHER EXAMPLE

let experience = 0;
let language = "C#";

console.log(experience > 1 || language === "C#");
// Output: true
//Explain the first condition is false but the second condition is true so the result is true.


//EXAMPLE 
let experience = 5;
let language = "C++";

if (experience > 1 || language === "C#") {
  console.log("You are qualified!");
} else {
  console.log("You are not qualified!");
}

// Output: You are qualified!
//Explanation: The condition experience > 1 || language === "C#" is true because the first part of the condition is true. The first part of the condition is true because the value of the variable experience is greater than 1. Therefore, the code block inside the if statement is executed, and the message You are qualified! is printed to the console.


//NOT OPERATOR
//INVERTS the result of a CONDITION

let hasDegree = true;
let experience = 3;

console.log(!hasDegree);
//Output: false
//Explanation: The value of hasDegree is true, but the NOT operator inverts the result of the condition, so the output is false.

console.log(!(experience > 1));
//Output: false
//Explanation: The value of experience is 3, and the condition is true, but the NOT operator inverts the result of the condition, so the output is false.
