STRINGS
One of the datatypes in JavaScript. It maybe a character, word or sentence
surrounded by "" or ''. They are used to display text information

Quick Exercise

Value                   Type
true                    Bolean
"false"                 String
"12"                    String
64                      Number
'Hello World'           String


//String Length

let word1 = "Hello World";
let len1 = word1.length;
console.log(len1);
//Output: 11

let word1 = "HelloWorld";
let len1 = word1.length;
console.log(len1);
//Output: 10

.length is a property that gives the number of characters in a string.


//String Indices
Individual characters can be accessed by using an index

let name = "David"

Elements | D A V I D
index    | 0 1 2 3 4

let name = "David"
console.log(name[0]);
//Output: D 

//Another Example with variable
let word = "Hello"
let x = 1;
alert(word[x]);
//Output: e


We use [] square brackets to access the indices of a string

// * INDEX STARTS AT 0 WHILE LENGTH STARTS AT 1 *
let name = "Alenereadasdasd";
alert(name[name.length-1]);


//String Methods
These different methods can manipulate strings in different ways

Methods                 Usage                       Description
toUpperCase()           word.toUpperCase();         Turns string to uppercase
toLowerCase()           word.toLowerCase();         Turns string to lowercase
trim()                  word.trim();                Removes extra spaces on start and end of a string
trimEnd()               word.trimEnd();             Removes extra spaces on the end of a string
trimStart()             word.trimStart();           Removes extra spaces on the start


//toUpperCase
let word = "Hello";
alert(word.toUpperCase());
//Output: HELLO

//toLowerCase
let word = "Hello";
alert(word.toLocaleLowerCase());
//Output: hello

//toLowerCase with Variable word
let word = "Hello";
word = word.toLocaleLowerCase()
alert(word);

//trim Example the string is 7 because of spaces now the output is 5 because trim removes the beginning and end spaces
let word = " Hello ";
word = word.trim();
alert(word.length);
//Output: 5

//trimEnd Example removes the space at the end so it is now " Hello"
let word = " Hello ";
word = word.trimEnd();
alert(word);
//Output:  Hello

//trimStart Example removes the space at the start so it is now "Hello "
let word = "Hello ";
word = word.trimStart();
alert(word);
//Output: Hello 


Methods                 Usage                           Description
replace()               word.replace(from, to);         Replaces frist matching word on a string
replaceAll()            word.replaceAll(from, to);      Replaces all matching words on a string

//Example for replace() it is also case sensitive, the result is "I have a cat, my dog is cute" the first string was changed into cat but not the 2nd string dog
let s = "I have a dog, my dog is cute.";
s= s.replace("dog", "cat");
alert(s);
//Output: I have a cat, my dog is cute


//Example for replaceAll() the result is "I have a cat, my cat is cute" because it relaces all string which has "dog" to "cat"
let s = "I have a dog, my dog is cute.";
s= s.replaceAll("dog", "cat");
alert(s);
//Output: I have a cat, my cat is cute

//String Methods
Methods                 Usage                           Description
slice()               word.slice(start, end);           Gets a part of a string by specifying the start and end index

//Example for slice *Always add 1 index to include the letter u want*
let s = "I have a dog, my dog is cute.";
s= s.slice(2, 6);
alert(s);
//Output: have

//Another Example
let s = "I have a dog, my dog is cute.";
s= s.slice(9, 12);
alert(s);
//Output: dog;


//String Template Literals, it is used so that u can use "" and '' or special characters inside the string
Create string values by using ``(backticks).
let word = `String "Literals"`;
alert(word);
//Output: String "Literals"

*You can use ${} to add an expression inside a string such as variables or mathematical expressions.*

//Another Example
let name = "David"
alert(`Hi, ${name}`);
//Output: Hi, David


//EXAMPLE
//Instead of This
let name = "Brendan"
alert("Hi, " + name + ".");
//You can use this to lessen your code no + sign and its the same.
let name2 = "Raul";
alert(`Hi, ${name2}. Welcome to Jolibee`);

//ANOTHER EXAMPLE
//INSTEAD OF THIS WHICH IS CONFUSING TO CONCATENATE
let num1 = 5;
let num2 = 3;
let sum = num1 + num2;
alert(num1 + " + " + num2 + " = " + sum);
//Output : 5 + 3 = 8

//YOU CAN USE THIS BACKTICKS, same output but different solution but more efficient
let num1 = 5;
let num2 = 3;
let sum = num1 + num2;
alert(`${num1} + ${num2} = ${sum}`)
//Output : 5 + 3 = 8


//ALTERNATIVELY U CAN ALSO USE THIS JUST REMOVE THE SUM VARIABLE AND ADD The ${num+num2} on the string literal and you wil get the same output
let num1 = 5;
let num2 = 3;
alert(`${num1} + ${num2} = ${num1+num2}`);


